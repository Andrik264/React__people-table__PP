{"version":3,"sources":["api/people.ts","components/PeopleContext/PeopleContext.tsx","types/queryParams.ts","components/HomePage/HomePage.tsx","components/PersonName/PersonName.tsx","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/CreateNewUserModal/CreateNewUserForm/CreateNewUserForm.tsx","components/CreateNewUserModal/CreateNewUserModal.tsx","components/PeoplePage/PeoplePage.tsx","components/Header/Header.tsx","App.tsx","index.tsx"],"names":["PEOPLE_URL","a","fetch","response","ok","status","statusText","Error","json","SortBy","SortOrder","PeopleContext","React","createContext","people","setPeople","PeopleProvider","children","useState","useEffect","getPeople","then","newPeople","map","human","motherName","fatherName","mother","find","name","father","findParents","contextValue","Provider","value","HomePage","PersonName","personSlug","search","useLocation","to","pathname","style","color","getTextColorBySex","sex","PersonRow","memo","person","useParams","className","classNames","slug","backgroundColor","born","died","PeopleTable","sortPeople","sortableColumns","Name","Sex","Born","Died","searchParams","URLSearchParams","sortBy","get","sortOrder","isSelected","useCallback","columnName","column","onClick","src","Object","values","includes","alt","CreateNewUserForm","onClose","useContext","newPerson","setNewPerson","emptyNameError","setEmptyNameError","invalidNameError","setInvalidNameError","lifePeriodError","setLifePeriodError","nameValidation","handleNewPersonData","field","getFilteredPeople","peopleSex","childBornYear","filter","onSubmit","event","preventDefault","split","join","personToAdd","type","placeholder","onChange","target","onBlur","length","onEmptyNameError","test","onInvalidNameError","required","checked","e","min","max","Date","getFullYear","Number","disabled","CreateNewUserModal","modalWindow","document","querySelector","classList","add","setTimeout","compareStrings","b","localeCompare","PeoplePage","useSearchParams","setSearchParams","query","toLowerCase","queryParams","setQueryParams","isCreateUserModalActive","setIsCreateUserModalActive","ModalActions","open","close","filteredPeople","sort","p1","p2","asc","updateSearchParams","newQuery","entries","forEach","queryName","set","delete","applyQueryWithDebounce","debounce","handleSortChange","newSortByValue","desc","Header","isActive","App","path","element","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4ce60359.chunk.js","sourcesContent":["const BASE_URL = 'https://mate-academy.github.io';\nconst PEOPLE_URL = `${BASE_URL}/react_people-table/api/people.json`;\n\nexport async function getPeople() {\n  const response = await fetch(PEOPLE_URL);\n\n  if (!response.ok) {\n    const { status, statusText } = response;\n\n    throw new Error(`${status} - ${statusText}`);\n  }\n\n  return response.json();\n}\n","import React, { useEffect, useState } from 'react';\nimport { Human, Child } from '../../types/human';\nimport { getPeople } from '../../api/people';\n\nfunction findParents(people: Human[]): Child[] {\n  return people.map(human => {\n    const { motherName, fatherName } = human;\n\n    return {\n      ...human,\n      mother: people.find(mother => motherName === mother.name),\n      father: people.find(father => fatherName === father.name),\n    };\n  });\n}\n\ntype ContextProps = {\n  people: Human[],\n  setPeople: (items: Human[]) => void,\n};\n\nexport const PeopleContext = React.createContext<ContextProps>({\n  people: [],\n  setPeople: () => {},\n});\n\nexport const PeopleProvider: React.FC = ({ children }) => {\n  const [people, setPeople] = useState<Human[]>([]);\n\n  useEffect(() => {\n    getPeople()\n      .then(newPeople => setPeople(findParents(newPeople)));\n  }, []);\n\n  const contextValue = {\n    people,\n    setPeople,\n  };\n\n  return (\n    <PeopleContext.Provider value={contextValue}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n","export enum SortBy {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n}\n\nexport enum SortOrder {\n  asc = 'asc',\n  desc = 'desc',\n}\n\nexport interface QueryParams {\n  query: string;\n  sortBy: string;\n  sortOrder: string;\n}\n","export const HomePage = () => (\n  <h1>Home Page</h1>\n);\n","import React from 'react';\nimport {\n  Link, useLocation,\n} from 'react-router-dom';\nimport { Child } from '../../types/human';\n\ntype Props = {\n  name: Child['name'] | Child['fatherName'] | Child['motherName'];\n  personSlug: Child['slug'];\n};\n\nexport const PersonName: React.FC<Props> = ({ name, personSlug }) => {\n  const { search } = useLocation();\n\n  return (\n    <Link\n      to={{\n        pathname: `/people/${personSlug}`,\n        search,\n      }}\n      style={{ color: 'inherit' }}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\n\nimport { Child } from '../../types/human';\nimport { PersonName } from '../PersonName';\n\ntype Props = {\n  person: Child;\n};\n\nfunction getTextColorBySex(sex: 'f' | 'm') {\n  return sex === 'm' ? 'rgb(0, 71, 171)' : 'rgb(255, 0, 0)';\n}\n\nexport const PersonRow: React.FC<Props> = React.memo(\n  ({ person }) => {\n    const { personSlug } = useParams<{ personSlug: string }>();\n\n    return (\n      <tr\n        key={person.name}\n        className={classNames('Person')}\n        style={personSlug === person.slug\n          ? { backgroundColor: 'green' } : {}}\n      >\n        <th style={{ color: getTextColorBySex(person.sex) }}>\n          <PersonName name={person.name} personSlug={person.slug} />\n        </th>\n        <th>{person.sex}</th>\n        <th>{person.born}</th>\n        <th>{person.died}</th>\n        <th style={{\n          color: person.mother\n            ? getTextColorBySex(person.mother.sex)\n            : 'black',\n        }}\n        >\n          {person.mother ? (\n            <PersonName\n              name={person.mother.name}\n              personSlug={person.mother.slug}\n            />\n          ) : <b>{person.motherName}</b>}\n        </th>\n        <th style={{\n          color: person.father\n            ? getTextColorBySex(person.father.sex)\n            : 'black',\n        }}\n        >\n          {person.father ? (\n            <PersonName\n              name={person.father.name}\n              personSlug={person.father.slug}\n            />\n          ) : <b>{person.fatherName}</b>}\n        </th>\n      </tr>\n    );\n  },\n);\n","import './PeopleTable.scss';\nimport React, {\n  useCallback,\n} from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { Child } from '../../types/human';\nimport { SortBy, SortOrder } from '../../types/queryParams';\n\nimport { PersonRow } from '../PersonRow';\n\ntype Props = {\n  people: Child[],\n  sortPeople: (arg0: SortBy) => void;\n};\n\nexport const PeopleTable: React.FC<Props> = React.memo(({\n  people,\n  sortPeople,\n}) => {\n  const sortableColumns = [SortBy.Name, SortBy.Sex, SortBy.Born, SortBy.Died];\n  const { search } = useLocation();\n  const searchParams = new URLSearchParams(search);\n  const sortBy = searchParams.get('sortBy');\n  const sortOrder = searchParams.get('sortOrder');\n\n  const isSelected = useCallback((columnName) => {\n    return columnName === sortBy;\n  }, [sortBy]);\n\n  const isSortOrderValid = () => {\n    return Object.values(SortOrder).includes(sortOrder as unknown as SortOrder);\n  };\n\n  return (\n    <table className=\"PeopleTable table is-bordered is-fullwidth\">\n      <thead>\n        <tr>\n          {sortableColumns.map(column => (\n            <th\n              key={column}\n              className=\"\n                PeopleTable__column-title\n                PeopleTable__column-title--sortable\"\n              onClick={() => sortPeople(column)}\n            >\n              {column}\n              {isSelected(column) ? (\n                <img\n                  src={`images/sort_${isSortOrderValid() ? sortOrder : 'both'}.png`}\n                  alt={`sort ${sortOrder || 'both'}`}\n                />\n              ) : (\n                <img\n                  src=\"images/sort_both.png\"\n                  alt=\"sort both\"\n                />\n              )}\n            </th>\n          ))}\n          <th className=\"PeopleTable__column-title\">Mother</th>\n          <th className=\"PeopleTable__column-title\">Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {people.map(person => (\n          <PersonRow key={person.name} person={person} />\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import React, {\n  FormEvent, useContext, useEffect, useState,\n} from 'react';\nimport './CreateNewUserForm.scss';\nimport { PeopleContext } from '../../PeopleContext';\nimport { Human } from '../../../types/human';\n\ntype Props = {\n  onClose: () => void,\n};\n\nexport const CreateNewUserForm: React.FC<Props> = React.memo(({ onClose }) => {\n  const { people, setPeople } = useContext(PeopleContext);\n  const [newPerson, setNewPerson] = useState<Human>({\n    name: '',\n    sex: 'm',\n    born: 0,\n    died: 0,\n    fatherName: '',\n    motherName: '',\n    slug: '',\n  });\n  const [emptyNameError, setEmptyNameError] = useState(false);\n  const [invalidNameError, setInvalidNameError] = useState(false);\n  const [lifePeriodError, setLifePeriodError] = useState(false);\n\n  const nameValidation = /^[a-zA-Z ]{3,30}$/;\n\n  useEffect(() => {\n    const { born, died } = newPerson;\n\n    if (died && born) {\n      setLifePeriodError(died - born >= 150);\n    }\n  }, [newPerson.born, newPerson.died]);\n\n  const handleNewPersonData = (field: string, value: string | number) => {\n    setNewPerson({\n      ...newPerson,\n      [field]: value,\n    });\n  };\n\n  const onEmptyNameError = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setEmptyNameError(!value.length);\n  };\n\n  const onInvalidNameError = () => {\n    const { name } = newPerson;\n\n    setInvalidNameError(name.length > 0 && !nameValidation.test(name));\n  };\n\n  const getFilteredPeople = (peopleSex: string, childBornYear = 1400) => {\n    return people.filter(person => person.sex === peopleSex\n      && person.born <= childBornYear - 18\n      && person.died >= childBornYear + 1);\n  };\n\n  const clearForm = () => {\n    setNewPerson({\n      name: '',\n      sex: 'm',\n      born: 0,\n      died: 0,\n      fatherName: '',\n      motherName: '',\n      slug: '',\n    });\n  };\n\n  const onFormSubmit = (event: FormEvent) => {\n    const { name, born } = newPerson;\n\n    event.preventDefault();\n\n    const slug = `${name.split(' ').join('-')}-${born}`;\n\n    const personToAdd: Human = {\n      ...newPerson,\n      slug,\n    };\n\n    setPeople([...people, personToAdd]);\n    clearForm();\n    onClose();\n  };\n\n  return (\n    <div>\n      <div className=\"container\">\n        <h1>Create a new Person</h1>\n\n        <form className=\"form\" onSubmit={onFormSubmit}>\n          <label className=\"form__field\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Name\"\n              value={newPerson.name}\n              onChange={(event) => {\n                handleNewPersonData('name', event.target.value);\n                setEmptyNameError(false);\n              }}\n              onBlur={(event) => {\n                onEmptyNameError(event);\n                onInvalidNameError();\n              }}\n            />\n\n            {emptyNameError && (\n              <span className=\"form__error\">\n                Name field if required\n              </span>\n            )}\n\n            {invalidNameError && (\n              <span className=\"form__error\">\n                The name can contain only letters and spaces\n                and be between 3 and 30 characters long\n              </span>\n            )}\n          </label>\n\n          <label className=\"form__radio\">\n            Male\n            <input\n              required\n              type=\"radio\"\n              name=\"sex\"\n              value=\"m\"\n              checked={newPerson.sex === 'm'}\n              onChange={(e) => handleNewPersonData('sex', e.target.value)}\n              className=\"form-check-input mt-0\"\n            />\n          </label>\n\n          <label className=\"form__radio\">\n            Female\n            <input\n              required\n              type=\"radio\"\n              name=\"sex\"\n              value=\"f\"\n              checked={newPerson.sex === 'f'}\n              onChange={(e) => handleNewPersonData('sex', e.target.value)}\n              className=\"form-check-input mt-0\"\n            />\n          </label>\n\n          <label className=\"form__field\">\n            Born\n            <input\n              type=\"number\"\n              placeholder=\"Born year\"\n              value={newPerson.born}\n              min={1400}\n              max={new Date().getFullYear()}\n              onChange={(event) => {\n                handleNewPersonData('born', Number(event.target.value));\n              }}\n              className=\"form-control\"\n            />\n          </label>\n\n          <label>\n            Died\n            <input\n              type=\"number\"\n              placeholder=\"Death year\"\n              disabled={!newPerson.born}\n              value={newPerson.died}\n              min={newPerson.born}\n              max={new Date().getFullYear()}\n              onChange={(event) => {\n                handleNewPersonData('died', Number(event.target.value));\n              }}\n              className=\"form-control\"\n            />\n            {lifePeriodError && (\n              <span className=\"form__error\">\n                The life period of a person should be less than 150 years\n              </span>\n            )}\n          </label>\n\n          <label>\n            <select\n              disabled={!newPerson.born}\n              value={newPerson.fatherName}\n              onChange={event => {\n                handleNewPersonData('fatherName', event.target.value);\n              }}\n              className=\"form-select\"\n            >\n              <option value=\"\" disabled>Choose a father</option>\n              {getFilteredPeople('m', newPerson.born).map(person => (\n                <option\n                  key={person.slug}\n                  value={person.name}\n                >\n                  {person.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          <label>\n            <select\n              disabled={!newPerson.born}\n              value={newPerson.motherName}\n              onChange={event => {\n                handleNewPersonData('motherName', event.target.value);\n              }}\n              className=\"form-select\"\n            >\n              <option value=\"\" disabled>Choose a mother</option>\n              {getFilteredPeople('f', newPerson.born).map(person => (\n                <option\n                  key={person.slug}\n                  value={person.name}\n                >\n                  {person.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          <button className=\"btn btn-outline-success\" type=\"submit\">\n            Add a new person\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n});\n","import './CreateNewUserModal.scss';\nimport { CreateNewUserForm } from './CreateNewUserForm';\n\ntype Props = {\n  onClose: () => void,\n};\n\nexport const CreateNewUserModal = ({ onClose }: Props) => {\n  const closeModal = () => {\n    const modalWindow = document.querySelector('.modal');\n\n    modalWindow?.classList.add('out');\n    setTimeout(onClose, 2000);\n  };\n\n  return (\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" />\n\n      <div className=\"modal-content\">\n        <div className=\"box\">\n          <CreateNewUserForm onClose={onClose} />\n        </div>\n      </div>\n\n      <button\n        type=\"button\"\n        className=\"modal-close is-large\"\n        aria-label=\"close\"\n        onClick={closeModal}\n      >\n        Close\n      </button>\n    </div>\n  );\n};\n","import './PeoplePage.scss';\nimport React, {\n  useState,\n  useCallback,\n  useContext,\n} from 'react';\nimport {\n  useLocation,\n  useSearchParams,\n} from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport { PeopleContext } from '../PeopleContext';\n\nimport { QueryParams, SortBy, SortOrder } from '../../types/queryParams';\n\nimport { PeopleTable } from '../PeopleTable';\nimport { CreateNewUserModal } from '../CreateNewUserModal';\n\nconst compareStrings = (a: string, b: string) => a.localeCompare(b);\n\nexport const PeoplePage: React.FC = () => {\n  const { pathname } = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query')?.toLowerCase() || '';\n  const sortBy = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n  const [queryParams, setQueryParams] = useState<QueryParams>({\n    query,\n    sortBy,\n    sortOrder,\n  });\n  const { people } = useContext(PeopleContext);\n  const [isCreateUserModalActive, setIsCreateUserModalActive] = useState(false);\n\n  const ModalActions = {\n    open: () => setIsCreateUserModalActive(true),\n    close: () => setIsCreateUserModalActive(false),\n  };\n\n  const filteredPeople = people\n    .filter(human => human.name.toLowerCase().includes(query)\n      || human.motherName?.toLowerCase().includes(query)\n      || human.fatherName?.toLowerCase().includes(query));\n\n  const sortPeople = useCallback(() => {\n    if (!sortBy) {\n      return filteredPeople;\n    }\n\n    return [...filteredPeople].sort((p1, p2): number => {\n      switch (sortBy) {\n        case SortBy.Name:\n        case SortBy.Sex:\n          return sortOrder === SortOrder.asc\n            ? compareStrings(p1[sortBy], p2[sortBy])\n            : compareStrings(p2[sortBy], p1[sortBy]);\n\n        case SortBy.Born:\n        case SortBy.Died:\n          return sortOrder === SortOrder.asc\n            ? p1[sortBy] - p2[sortBy]\n            : p2[sortBy] - p1[sortBy];\n\n        default:\n          return 0;\n      }\n    });\n  }, [filteredPeople, sortBy, sortOrder]);\n\n  const updateSearchParams = useCallback(\n    (newQuery: QueryParams) => {\n      const entries = Object.entries(newQuery);\n\n      entries.forEach(\n        ([queryName, value]) => (value\n          ? searchParams.set(queryName, value)\n          : searchParams.delete(queryName)\n        ),\n      );\n\n      setSearchParams(searchParams);\n    }, [pathname],\n  );\n\n  const applyQueryWithDebounce = useCallback(\n    debounce((newQuery: QueryParams) => {\n      updateSearchParams(newQuery);\n    }, 500),\n    [pathname],\n  );\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target: { name, value = '' } } = event;\n    const newQuery = { ...queryParams, [name]: value.toLowerCase() };\n\n    setQueryParams(newQuery);\n    applyQueryWithDebounce(newQuery);\n  };\n\n  const handleSortChange = useCallback((newSortByValue: SortBy) => {\n    const newQuery = {\n      ...queryParams,\n      sortBy: newSortByValue.toLowerCase(),\n    };\n\n    if (newSortByValue !== queryParams.sortBy) {\n      newQuery.sortOrder = SortOrder.asc;\n    } else {\n      switch (queryParams.sortOrder) {\n        case SortOrder.asc:\n          newQuery.sortOrder = SortOrder.desc;\n          break;\n\n        case SortOrder.desc:\n          newQuery.sortOrder = SortOrder.asc;\n          break;\n\n        default:\n          newQuery.sortOrder = '';\n          break;\n      }\n    }\n\n    setQueryParams(newQuery);\n    updateSearchParams(newQuery);\n  }, [queryParams]);\n\n  return (\n    <>\n      <div className=\"people-page\">\n        <div className=\"people-page__container\">\n          <div className=\"people-page__tools\">\n            <div className=\"people-page__tools__filter\">\n              <input\n                className=\"input is-normal is-rounded\"\n                data-cy=\"filterInput\"\n                name=\"query\"\n                placeholder=\"Person Name\"\n                value={queryParams.query}\n                onChange={handleFilterChange}\n              />\n            </div>\n\n            <div className=\"people-page__tools__create-new-user\">\n              <button\n                className=\"button is-success is-light\"\n                type=\"button\"\n                onClick={ModalActions.open}\n              >\n                Create New Person\n              </button>\n            </div>\n          </div>\n\n          <div className=\"people-page__table-container\">\n            {people.length ? (\n              <PeopleTable\n                sortPeople={handleSortChange}\n                people={sortPeople()}\n              />\n            ) : <h1>There is nobody :/</h1> }\n          </div>\n\n          {isCreateUserModalActive\n            && <CreateNewUserModal onClose={ModalActions.close} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import './Header.scss';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Header: React.FC = () => {\n  return (\n    <header>\n      <nav className=\"navbar\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              'is-tab',\n              { 'is-active': isActive },\n            )}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              'is-tab',\n              { 'is-active': isActive },\n            )}\n          >\n            People\n          </NavLink>\n        </div>\n      </nav>\n    </header>\n  );\n};\n","import './App.scss';\nimport {\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { PeopleProvider } from './components/PeopleContext';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Header } from './components/Header';\n\nconst App: React.FC = () => {\n  return (\n    <PeopleProvider>\n      <div className=\"App\">\n        <Header />\n\n        <div className=\"App__main\">\n          <Routes>\n            <Route path=\"/people\" element={<PeoplePage />}>\n              <Route path=\":personSlug\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n            <Route path=\"*\" element={<><h1>Page not found</h1></>} />\n          </Routes>\n        </div>\n      </div>\n    </PeopleProvider>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}